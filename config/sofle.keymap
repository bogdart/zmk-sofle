#include <behaviors/mouse_keys.dtsi>
#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10
#define U_MS_U &mmv MOVE_UP
#define U_MS_D &mmv MOVE_DOWN
#define U_MS_L &mmv MOVE_LEFT
#define U_MS_R &mmv MOVE_RIGHT
#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1200  //  600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10

/ {
    behaviors {
        mmv {
            acceleration-exponent = <1>;      // 1
            time-to-max-speed-ms = <900>;    // 40
            delay-ms = <0>;                   // 0
        };

        msc {
            acceleration-exponent = <1>;      // 0
            time-to-max-speed-ms = <400>;      // 500
            delay-ms = <0>;                   //   10
        };
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <5>;
    };

    scrollms: scrollms {
        compatible = "zmk,behavior-sensor-rotate-var";
        label = "SCROLLMS";
        #sensor-binding-cells = <2>;
        bindings = <&alttab>, <&altshifttab>;

        tap-ms = <1>;
    };

    macros {
        alttab: alttab {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_ALT>,
                <&macro_tap>,
                <&kp TAB>,
                <&macro_tap>,
                <&sk LEFT_ALT>,
                <&macro_release>,
                <&kp LEFT_ALT>;

            label = "ALTTAB";
            wait-ms = <1>;
            tap-ms = <100>;
        };

        altshifttab: altshifttab {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_ALT>,
                <&macro_tap>,
                <&kp LS(TAB)>,
                <&macro_tap>,
                <&sk LEFT_ALT>,
                <&macro_release>,
                <&kp LEFT_ALT>;

            label = "ALTSHIFTTAB";
            wait-ms = <1>;
            tap-ms = <100>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        layer0 {
            bindings = <
&kp ESC            &kp N1        &kp N2   &kp N3          &kp N4  &kp N5           &kp UP_ARROW     &kp N6     &kp N7     &kp N8           &kp N9        &kp N0      &kp MINUS
&kp LEFT_BRACKET   &kp Q         &kp W    &kp E           &kp R   &kp T            &kp DOWN_ARROW   &kp Y      &kp U      &kp I            &kp O         &kp P       &kp EQUAL
&kp RIGHT_BRACKET  &kp A         &kp S    &kp D           &kp F   &kp G            &kp LEFT_ARROW   &kp H      &kp J      &kp K            &kp L         &kp SEMI    &kp APOS
&kp LEFT_CONTROL   &kp Z         &kp X    &kp C           &kp V   &kp B            &kp RIGHT_ARROW  &kp N      &kp M      &kp COMMA        &kp DOT       &kp FSLH    &kp GRAVE
&kp LG(LS(S))      &kp TAB  &kp LEFT_ALT  &kp LEFT_SHIFT  &mo 1   &kp BACKSPACE    &kp LG(SPACE)    &kp ENTER  &kp SPACE  &kp RIGHT_SHIFT  &kp LEFT_GUI  &kp DELETE
            >;

            sensor-bindings = <&scrollms 0 0>;
            display-name = "LAYER0";
        };

        layer_1 {
            bindings = <
&trans      &kp F1  &kp F2  &kp F3          &kp F4  &kp F5    &kp HOME       &kp F6                &kp F7                 &kp F8             &kp F9            &kp F10          &kp F11
&trans      &trans  &trans  &trans          &trans  &trans    &kp END        &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp INSERT         &trans            &kp PRINTSCREEN  &kp F12
&trans      &trans  &trans  &trans          &trans  &trans    &kp PAGE_UP    &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp DOUBLE_QUOTES  &kp SINGLE_QUOTE  &trans           &trans
&trans      &trans  &trans  &trans          &trans  &trans    &kp PAGE_DOWN  &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp LESS_THAN      &kp GREATER_THAN  &kp BACKSLASH    &trans
&kp K_MUTE  &trans  &trans  &kp LEFT_SHIFT  &trans  &mo 2     &to 2          &trans                &kp SPACE              &kp CAPS           &trans            &trans
            >;

            display-name = "layer1";
            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        layer_2 {
            bindings = <
&to 0      &bt BT_SEL 0     &bt BT_SEL 1    &bt BT_SEL 2     &bt BT_SEL 3     &bt BT_SEL 4       &mmv MOVE_UP     &kp KP_NUMLOCK   &kp KP_LEFT_PARENTHESIS  &kp KP_RIGHT_PARENTHESIS  &kp KP_DIVIDE    &trans      &trans
&trans     &bt BT_CLR       &bt BT_CLR_ALL  &trans           &trans           &trans             &mmv MOVE_DOWN   &kp KP_NUMBER_7  &kp KP_NUMBER_8          &kp KP_NUMBER_9           &kp KP_MULTIPLY  &trans      &trans
&trans     &out OUT_USB     &out OUT_BLE    &trans           &trans           &trans             &mmv MOVE_LEFT   &kp KP_NUMBER_4  &kp KP_NUMBER_5          &kp KP_NUMBER_6           &kp KP_MINUS     &trans      &trans
&trans     &rgb_ug RGB_OFF  &rgb_ug RGB_ON  &rgb_ug RGB_BRD  &rgb_ug RGB_BRI  &rgb_ug RGB_EFF    &mmv MOVE_RIGHT  &kp KP_NUMBER_1  &kp KP_NUMBER_2          &kp KP_NUMBER_3           &kp KP_PLUS      &trans      &trans
&mkp RCLK  &trans           &trans          &trans           &trans           &trans             &mkp LCLK        &kp KP_ENTER     &kp KP_DOT               &kp KP_NUMBER_0           &kp BACKSPACE    &kp DELETE
            >;

            sensor-bindings = <&scroll_encoder>;
        };
    };
};
